
&НаКлиенте
Процедура КатегорияОперацийПриИзменении(Элемент)
	
	КатегорияОперацийПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КатегорияОперацийПриИзмененииНаСервере()
	
	УправленческийУчет.Очистить();
	
	ДанныеУУ = УправленческийУчетСервер.ПодготовитьДанныеУправленческогоУчета(Запись.КатегорияОпераций);
	
	Для Каждого СтрокаПараметры Из ДанныеУУ Цикл
		
		НоваяСтрокаУУ = УправленческийУчет.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаУУ, СтрокаПараметры);
		
		Если СтрокаПараметры.Свойство("ВидПараметра") Тогда
			НоваяСтрокаУУ.ТипЗначения = СтрокаПараметры.ВидПараметра.ТипЗначения;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	КатегорияОперацийПриИзмененииНаСервере();
	МассивСохранения = ТекущийОбъект.Реквизиты.Получить();
	
	Если ТипЗнч(МассивСохранения) = Тип("Массив") Тогда
		
		Для Каждого Элемент Из МассивСохранения Цикл

			Для Каждого СтрокаУУ Из УправленческийУчет.НайтиСтроки(Новый Структура("Имя", Элемент.Имя)) Цикл
				ЗаполнитьЗначенияСвойств(СтрокаУУ, Элемент);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МассивСохранения = Новый Массив;
	
	Для Каждого СтрокаТЗ Из УправленческийУчет Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Значение) Тогда
			
			СтруктураСохранения = Новый Структура("Имя, Значение");
			ЗаполнитьЗначенияСвойств(СтруктураСохранения, СтрокаТЗ);
			МассивСохранения.Добавить(СтруктураСохранения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекущийОбъект.Реквизиты = Новый ХранилищеЗначения(МассивСохранения);
	
	Если СтрокиПоиска.Количество() = 0 Тогда
		ТекущийОбъект.СтрокаПоиска = "";
		ТекущийОбъект.ПредставлениеПоиска = "";
	Иначе
		
		ИтоговаяСтрока = "";
		ИтоговаяСтрокаПредставление = "";
		
		Для Каждого Строка Из СтрокиПоиска Цикл
			
			Строка = СокрЛП(Строка);
			
			Если ИтоговаяСтрокаПредставление = "" Тогда
				ИтоговаяСтрокаПредставление = Строка;
			Иначе
				ИтоговаяСтрокаПредставление = ИтоговаяСтрокаПредставление + " / " + Строка;
			КонецЕсли;
			
			Пока Найти(Строка, "  ") > 0 Цикл
				Строка = СтрЗаменить(Строка, "  ", " ");
			КонецЦикла;
			Строка = СтрЗаменить(Строка, " ", "\s+");
			//Строка = СтрЗаменить(Строка, ".", "\.");
			
			Если СокрЛП(Строка) <> "" Тогда
				Если ИтоговаяСтрока = "" Тогда
					ИтоговаяСтрока = "(" + Строка + ")";
				Иначе
					ИтоговаяСтрока = ИтоговаяСтрока + "|(" + Строка + ")";
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		ТекущийОбъект.СтрокаПоиска = ИтоговаяСтрока;
		ТекущийОбъект.ПредставлениеПоиска = ИтоговаяСтрокаПредставление;
		
	КонецЕсли;
	
	Если НЕ Запись.ИспользуетсяАлгоритмРасчета Тогда
		Запись.АлгоритмРасчета = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяАлгоритмРасчетаПриИзменении(Элемент)
	Элементы.ГруппаАлгоритм.Видимость = Запись.ИспользуетсяАлгоритмРасчета;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаАлгоритм.Видимость = Запись.ИспользуетсяАлгоритмРасчета;
	
	Для Каждого Строка Из СтрРазделить(Запись.СтрокаПоиска, "|") Цикл
		
		Если Лев(Строка, 1) = "(" Тогда
			Строка = Сред(Строка, 2);
		КонецЕсли;
		
		Если Прав(Строка, 1) = ")" Тогда
			Строка = Лев(Строка, СтрДлина(Строка) - 1);
		КонецЕсли;
		
		Если Строка <> "" Тогда
			
			Строка = СтрЗаменить(Строка, "\s+", " ");
			//Строка = СтрЗаменить(Строка, "\.", ".");
			
			СтрокиПоиска.Добавить(Строка);	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры







