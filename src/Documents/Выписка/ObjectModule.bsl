
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Оплачиваем заявки
	
	СоединениеАДО = ЗапросыЧерезАДО.ПолучитьСоединениеАДО("Fin_Request");
	
	МассивGUIDовСтрокФинПлана = Новый Массив;
	
	
	Для Каждого СтрокаТЧ ИЗ ДанныеВыписки Цикл
		
		Если СтрокаТЧ.СтатьяДДС = Справочники.СтатьиДДС.Приход Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ НеОплачиватьЗаявки И ЗначениеЗаполнено(СтрокаТЧ.НомерЗаявки) Тогда
			РаботаСЗаявкамиСервер.SQL_ОплатитьЗаявку(СоединениеАДО, СтрокаТЧ.IDЗаявки, Истина, Дата, СтрокаТЧ.СуммаРасход, "", "", "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.GUIDСтрокиФинансовогоПлана) Тогда
			МассивGUIDовСтрокФинПлана.Добавить(СтрокаТЧ.GUIDСтрокиФинансовогоПлана);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФинансовыйПланПланирование.Ссылка КАК ФинансовыйПлан,
	|	ФинансовыйПланПланирование.GUIDСтрокиФинансовогоПлана КАК GUIDСтрокиФинансовогоПлана
	|ИЗ
	|	Документ.ФинансовыйПлан.Планирование КАК ФинансовыйПланПланирование
	|ГДЕ
	|	ФинансовыйПланПланирование.GUIDСтрокиФинансовогоПлана В(&МассивGUIDовСтрокФинПлана)
	|	И НАЧАЛОПЕРИОДА(ФинансовыйПланПланирование.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|ИТОГИ ПО
	|	ФинансовыйПлан";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("МассивGUIDовСтрокФинПлана", МассивGUIDовСтрокФинПлана);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаФинансовыйПлан = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФинансовыйПлан.Следующий() Цикл
		
		//ФинансовыйПланОбъект = ВыборкаФинансовыйПлан.ФинансовыйПлан.ПолучитьОбъект();
		
		Выборка = ВыборкаФинансовыйПлан.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//Если ЗначениеЗаполнено(Выборка.GUIDСтрокиФинансовогоПлана) Тогда
			//	
			//	Для Каждого СтрокаТЧ Из ФинансовыйПланОбъект.Планирование.НайтиСтроки(Новый Структура("GUIDСтрокиФинансовогоПлана", Выборка.GUIDСтрокиФинансовогоПлана)) Цикл
			//		СтрокаТЧ.ОплатаВыполнена = Истина;
			//	КонецЦикла;
			//	
			//КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.GUIDСтрокиФинансовогоПлана) Тогда
				Запись = РегистрыСведений.СостоянияСтрокДокументов.СоздатьМенеджерЗаписи();
				Запись.Документ = ВыборкаФинансовыйПлан.ФинансовыйПлан;
				Запись.GUIDСтроки = Выборка.GUIDСтрокиФинансовогоПлана;
				Запись.Состояние = Перечисления.СостоянияСтрокДокументов.Оплачено;
				Запись.Записать(Истина);
			КонецЕсли;
			
		КонецЦикла;
		
		//ФинансовыйПланОбъект.Записать();
		
	КонецЦикла;
	
	Движения.ДенежныеСредства.Записывать = Истина;
	
	Если Валюта = Справочники.Валюты.РоссийскийРубль Тогда
		
		Для Каждого СтрокаТЧ ИЗ ДанныеВыписки Цикл
			
			
			Сумма = СтрокаТЧ.СуммаПриход - СтрокаТЧ.СуммаРасход;
			
			Если Сумма > 0 Тогда
				Движение = Движения.ДенежныеСредства.ДобавитьПриход();
				Движение.Сумма = Сумма;
			Иначе
				Движение = Движения.ДенежныеСредства.ДобавитьРасход();
				Движение.Сумма = -Сумма;
			КонецЕсли;
			
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.БанковскийСчет = СчетОрганизации;
			Движение.Контрагент = СтрокаТЧ.Контрагент;
			Движение.СчетКонтрагента = СтрокаТЧ.СчетКонтрагента;
			Движение.СтатьяДДС = СтрокаТЧ.СтатьяДДС;
			Движение.НазначениеПлатежа = СтрокаТЧ.НазначениеПлатежа;
			
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаТЧ Из ДанныеВыписки Цикл
			
			Если СтрокаТЧ.СуммаПриход - СтрокаТЧ.СуммаРасход > 0 Тогда

				ВалютнаяСумма = СтрокаТЧ.ВалютнаяСумма;
				Движение = Движения.ДенежныеСредства.ДобавитьПриход();
				Движение.Сумма = ВалютнаяСумма;
				
			Иначе
				ВалютнаяСумма = СтрокаТЧ.ВалютнаяСумма;
				Движение = Движения.ДенежныеСредства.ДобавитьРасход();
				Движение.Сумма = ВалютнаяСумма;
			КонецЕсли;
			
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.БанковскийСчет = СчетОрганизации;
			Движение.Контрагент = СтрокаТЧ.Контрагент;
			Движение.СчетКонтрагента = СтрокаТЧ.СчетКонтрагента;
			Движение.СтатьяДДС = СтрокаТЧ.СтатьяДДС;
			Движение.НазначениеПлатежа = СтрокаТЧ.НазначениеПлатежа;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	СоединениеАДО = ЗапросыЧерезАДО.ПолучитьСоединениеАДО("Fin_Request");
	
	МассивGUIDовСтрокФинПлана = Новый Массив;
	
	Для Каждого СтрокаТЧ ИЗ ДанныеВыписки Цикл
		
		Если СтрокаТЧ.СтатьяДДС = Справочники.СтатьиДДС.Приход Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерЗаявки) Тогда
			
			Если НЕ НеОплачиватьЗаявки Тогда
				РаботаСЗаявкамиСервер.SQL_ОтменитьОплатуЗаявки(СоединениеАДО, СтрокаТЧ.IDЗаявки);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.GUIDСтрокиФинансовогоПлана) Тогда
			МассивGUIDовСтрокФинПлана.Добавить(СтрокаТЧ.GUIDСтрокиФинансовогоПлана);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФинансовыйПланПланирование.Ссылка КАК ФинансовыйПлан,
	|	ФинансовыйПланПланирование.GUIDСтрокиФинансовогоПлана КАК GUIDСтрокиФинансовогоПлана
	|ИЗ
	|	Документ.ФинансовыйПлан.Планирование КАК ФинансовыйПланПланирование
	|ГДЕ
	|	ФинансовыйПланПланирование.GUIDСтрокиФинансовогоПлана В(&МассивGUIDовСтрокФинПлана)
	|	И НАЧАЛОПЕРИОДА(ФинансовыйПланПланирование.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|ИТОГИ ПО
	|	ФинансовыйПлан";

	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("МассивGUIDовСтрокФинПлана", МассивGUIDовСтрокФинПлана);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаФинансовыйПлан = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФинансовыйПлан.Следующий() Цикл
		
		//ФинансовыйПланОбъект = ВыборкаФинансовыйПлан.ФинансовыйПлан.ПолучитьОбъект();
		
		Выборка = ВыборкаФинансовыйПлан.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//Для Каждого СтрокаТЧ Из ФинансовыйПланОбъект.Планирование.НайтиСтроки(Новый Структура("GUIDСтрокиФинансовогоПлана", Выборка.GUIDСтрокиФинансовогоПлана)) Цикл
			//	СтрокаТЧ.ОплатаВыполнена = Ложь;
			//КонецЦикла;
			
			Если ЗначениеЗаполнено(Выборка.GUIDСтрокиФинансовогоПлана) Тогда
				Запись = РегистрыСведений.СостоянияСтрокДокументов.СоздатьМенеджерЗаписи();
				Запись.Документ = ВыборкаФинансовыйПлан.ФинансовыйПлан;
				Запись.GUIDСтроки = Выборка.GUIDСтрокиФинансовогоПлана;
				Запись.Состояние = Перечисления.СостоянияСтрокДокументов.НеОплачено;
				Запись.Записать(Истина);
			КонецЕсли;
			
		КонецЦикла;
		
		//ФинансовыйПланОбъект.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОчисткаСтрокУправленческогоУчета();
	
КонецПроцедуры

Процедура ОчисткаСтрокУправленческогоУчета()
	
	МассивСтрокНаУдаление = Новый Массив;
	Для Каждого СтрокаТЧ Из УправленческийУчет Цикл
		
		Если ДанныеВыписки.НайтиСтроки(Новый Структура("GUIDСтрокиВыписки", СтрокаТЧ.GUIDСтрокиВыписки)).Количество() = 0 Тогда
			МассивСтрокНаУдаление.Добавить(СтрокаТЧ);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент Из МассивСтрокНаУдаление Цикл
		УправленческийУчет.Удалить(Элемент);
	КонецЦикла;
	
КонецПроцедуры

