Перем Команда_ОтчетПоДокументам;

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет());
	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = 'Касса и инкассация по дням'"));
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", НСтр("ru = 'Касса и инкассация по дням'"));
	ПараметрыРегистрации.Вставить("ВерсияБСП", "2.2.2.1");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд, НСтр("ru = 'Касса и инкассация по дням'"), Команда_ОтчетПоДокументам, "ОткрытиеФормы");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
    Период = Настройки.ПараметрыДанных.Элементы.Найти("Период");
	
	ТекстЗапроса = "SELECT
	|	DB_NAME() ИмяБазы,
	|	DocDate AS Дата, 
	|	S3.ЮЛ ЮЛ,
	|	SUM(S3.КК) AS КК,
	|	SUM(S3.ИНК) AS ИНК
	|FROM
	|	(SELECT S2.JuristicName AS ЮЛ,
	|			DocDate,	
	|			Case RowType
	|				WHEN 1 THEN Amount
	|				WHEN 2 THEN -Amount
	|				ELSE 0
	|			END AS КК,
	|			Case RowType
	|				WHEN 3 THEN Amount
	|				ELSE 0
	|			END AS ИНК	
	|	FROM
	|		(SELECT * FROM dbo.Buyanov_Juristic_Daily('%1', '%2')
	|	) AS S2
	|) AS S3
	|GROUP BY S3.DocDate, S3.ЮЛ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", Формат(Период.Значение.ДатаНачала,"ДФ=dd.MM.yyyy"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", Формат(Период.Значение.ДатаОкончания,"ДФ=dd.MM.yyyy"));
	
	СоответствиеВариантовЗапросов = Новый Соответствие;
	СоответствиеВариантовЗапросов.Вставить("ClothesCashDesk", "Одежда");
	СоответствиеВариантовЗапросов.Вставить("JW_Cash_Desk", "Ювелирка");
	СоответствиеВариантовЗапросов.Вставить("P_Cash_Desk", "Фарфор");
	
	ТЗ_Результат = Новый ТаблицаЗначений;
	ТЗ_Результат.Колонки.Добавить("ИмяБазы", Новый ОписаниеТипов("Строка"));
	ТЗ_Результат.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТЗ_Результат.Колонки.Добавить("ЮЛ", Новый ОписаниеТипов("Строка"));
	ТЗ_Результат.Колонки.Добавить("КК", Новый ОписаниеТипов("Число"));
	ТЗ_Результат.Колонки.Добавить("ИНК", Новый ОписаниеТипов("Число"));
	
	Для Каждого КлючЗначение Из СоответствиеВариантовЗапросов Цикл
		
		Соединение = "";
		ТЗДанных = Новый ТаблицаЗначений;
		
		Попытка          
			
			Соединение = ЗапросыЧерезАДО.ПолучитьСоединениеАДО(КлючЗначение.Ключ);
			ТЗДанных = ЗапросыЧерезАДО.ВыполнитьЗапросАДО(Соединение, ТекстЗапроса);
			ЗапросыЧерезАДО.ЗакрытьСоединениеАДО(Соединение);
			Соединение = Неопределено;
			
		Исключение
			
		КонецПопытки;
		
		Если ТЗДанных.Количество() > 0 Тогда
			
			Для Каждого СтрокаТЗ Из ТЗДанных Цикл
				
				НоваяСтрокаТаблицы = ТЗ_Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТЗ);
				НоваяСтрокаТаблицы.ИмяБазы = КлючЗначение.Значение;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
    СтандартнаяОбработка = Ложь;
    
    Настройки = КомпоновщикНастроек.ПолучитьНастройки();
    ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
   
    ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТЗ_Результат", ТЗ_Результат);
    
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ДокументРезультат.Очистить();

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Команда_ОтчетПоДокументам = "СформироватьОтчет";