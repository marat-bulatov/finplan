
&НаКлиенте
Процедура Сформировать(Команда)
	
    КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ОстаткиПоСчетамСКлассификацией");    
    КоллекцияПечатныхФорм[0].ТабличныйДокумент = СформироватьТабДокНаСервере();
    КоллекцияПечатныхФорм[0].Экземпляров = 1;
    КоллекцияПечатныхФорм[0].СинонимМакета = "Остатки денежных средств";  // используется для формирования имени файла при сохранении из общей формы печати документов
    УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	Закрыть();

КонецПроцедуры

&НаСервере
Функция СформироватьТабДокНаСервере()
	
	//Макет = Отчеты.ОстаткиПоСчетамСКлассификацией.ПолучитьМакет("Макет");
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ДатаОстатков = ДатаАнализа;
	
	ОбластьВидОрганизации 				= Макет.ПолучитьОбласть("ВидОрганизации");
	
	ОбластьСтрокаОрганизация 			= Макет.ПолучитьОбласть("СтрокаОрганизация");
	
	ОбластьСтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
	ОбластьСтрокаИтогов = Макет.ПолучитьОбласть("СтрокаИтогов");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредстваОстатки.Организация.ВидОрганизации КАК ВидОрганизации,
	|	ДенежныеСредстваОстатки.Организация КАК Организация,
	|	ДенежныеСредстваОстатки.Организация.Наименование КАК ОрганизацияНаименование,
	|	ВЫБОР
	|		КОГДА ДенежныеСредстваОстатки.БанковскийСчет.Банк.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДенежныеСредстваОстатки.БанковскийСчет.Банк.Наименование
	|		ИНАЧЕ ДенежныеСредстваОстатки.БанковскийСчет.Банк.Контрагент.Наименование
	|	КОНЕЦ КАК БанкНаименование,
	|	ДенежныеСредстваОстатки.БанковскийСчет.ВалютаДенежныхСредств КАК БанковскийСчетВалютаДенежныхСредств,
	|	ДенежныеСредстваОстатки.БанковскийСчет.ВалютаДенежныхСредств.Наименование КАК БанковскийСчетВалютаДенежныхСредствНаименование,
	|	ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаАнализа, ) КАК ДенежныеСредстваОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидОрганизации,
	|	ОрганизацияНаименование
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ВидОрганизации,
	|	Организация,
	|	БанкНаименование,
	|	БанковскийСчетВалютаДенежныхСредств";
	
	Запрос.УстановитьПараметр("ДатаАнализа", КонецДня(ДатаАнализа) + 1);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	мРубли = ПараметрыСеанса.ВалютаРегламентированногоУчета;
	
	ТабРезультат = Новый ТабличныйДокумент;
	ТабРезультат.Вывести(ОбластьШапка);
	
	ТЗ_Подсчет = Новый ТаблицаЗначений;
	ТЗ_Подсчет.Колонки.Добавить("НаименованиеБанка");
	ТЗ_Подсчет.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	ТЗ_Подсчет_Итог = Новый ТаблицаЗначений;
	ТЗ_Подсчет_Итог.Колонки.Добавить("НаименованиеБанка");
	ТЗ_Подсчет_Итог.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТЗ_Подсчет_Итог.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТЗ_Подсчет_Итог.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	ВыборкаВидОрганизации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВидОрганизации.Следующий() Цикл
		
		ТЗ_Подсчет.Очистить();
		
		ОбластьВидОрганизации.Параметры.ВидОрганизации = ВыборкаВидОрганизации.ВидОрганизации;
		ТабРезультат.Вывести(ОбластьВидОрганизации);
		
		ВыборкаОрганизация = ВыборкаВидОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОрганизация.Следующий() Цикл
			
			ВыборкаБанкНаименование = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаБанкНаименование.Следующий() Цикл
				
				ВыборкаБанковскийСчетВалютаДенежныхСредств = ВыборкаБанкНаименование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаБанковскийСчетВалютаДенежныхСредств.Следующий() Цикл
					
					Если ВыборкаБанковскийСчетВалютаДенежныхСредств.БанковскийСчетВалютаДенежныхСредств = мРубли Тогда
						НаименованиеБанка = ВыборкаБанковскийСчетВалютаДенежныхСредств.БанкНаименование;
					Иначе
						НаименованиеБанка = ВыборкаБанковскийСчетВалютаДенежныхСредств.БанкНаименование + " " + ВыборкаБанковскийСчетВалютаДенежныхСредств.БанковскийСчетВалютаДенежныхСредствНаименование;
					КонецЕсли;
					
					СтруктураДанных = Новый Структура("Организация, НаименованиеБанка, Сумма, Валюта", ВыборкаБанковскийСчетВалютаДенежныхСредств.Организация, НаименованиеБанка, ВыборкаБанковскийСчетВалютаДенежныхСредств.Сумма, ВыборкаБанковскийСчетВалютаДенежныхСредств.БанковскийСчетВалютаДенежныхСредств);
					
					ОбластьСтрокаОрганизация.Параметры.Заполнить(СтруктураДанных);
					ТабРезультат.Вывести(ОбластьСтрокаОрганизация);
					
					ЗаполнитьЗначенияСвойств(ТЗ_Подсчет.Добавить(), СтруктураДанных);
					ЗаполнитьЗначенияСвойств(ТЗ_Подсчет_Итог.Добавить(), СтруктураДанных);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТЗ_Подсчет.Свернуть("НаименованиеБанка", "Сумма");
		//ТабРезультат.Вывести(ОбластьСтрокаРазделитель);
		Для Каждого СтрокаТЗ Из ТЗ_Подсчет Цикл
			
			ОбластьСтрокаИтогов.Параметры.Заполнить(СтрокаТЗ);
			ТабРезультат.Вывести(ОбластьСтрокаИтогов);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТЗ_Подсчет_ПоВсемОрганизациям = ТЗ_Подсчет_Итог.Скопировать();
	ТЗ_Подсчет_ПоВсемОрганизациям.Свернуть("НаименованиеБанка", "Сумма");
	
	ОбластьСтрокаРазделитель.Параметры.Заголовок = "Итого по всем фирмам";
	ТабРезультат.Вывести(ОбластьСтрокаРазделитель);
	Для Каждого СтрокаТЗ_ПоВсемОрганизациям Из ТЗ_Подсчет_ПоВсемОрганизациям Цикл
		ОбластьСтрокаИтогов.Параметры.Заполнить(СтрокаТЗ_ПоВсемОрганизациям);
		ТабРезультат.Вывести(ОбластьСтрокаИтогов);
	КонецЦикла;
	
	ТЗ_Подсчет_Всего = ТЗ_Подсчет_Итог.Скопировать();
	Для Каждого СтрокаТЗВсего Из ТЗ_Подсчет_Всего Цикл
		Если СтрокаТЗВсего.Валюта = мРубли Тогда
			СтрокаТЗВсего.НаименованиеБанка = "";
		КонецЕсли;
	КонецЦикла;
	
	ТЗ_Подсчет_Всего.Свернуть("НаименованиеБанка", "Сумма");
	
	ОбластьСтрокаРазделитель.Параметры.Заголовок = "Всего";
	ТабРезультат.Вывести(ОбластьСтрокаРазделитель);
	
	Для Каждого СтрокаТЗВсего Из ТЗ_Подсчет_Всего Цикл
		ОбластьСтрокаИтогов.Параметры.Заполнить(СтрокаТЗВсего);
		ТабРезультат.Вывести(ОбластьСтрокаИтогов);
	КонецЦикла;
	
	Возврат ТабРезультат;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДатаАнализа = ТекущаяДата();
КонецПроцедуры
