
// ************************************
Функция СформироватьМассивПолейАвтопоиска()
	
	// Структура для автопоиска
	ПоляАвтоПоиска = Новый Массив;
	ПоляАвтоПоиска.Добавить("Ссылка");
	ПоляАвтоПоиска.Добавить("КатегорияДвижения");
	ПоляАвтоПоиска.Добавить("Организация");
	ПоляАвтоПоиска.Добавить("СчетОрганизации");
	ПоляАвтоПоиска.Добавить("Контрагент");
	ПоляАвтоПоиска.Добавить("СчетКонтрагента");
	ПоляАвтоПоиска.Добавить("НазначениеПлатежа");
	ПоляАвтоПоиска.Добавить("СтатьяДДС");
	
	Возврат ПоляАвтоПоиска;
	
КонецФункции

Функция СформироватьСтруктуруЗапросаАвтопоиска(СтруктураДанных) Экспорт
	
	ПоляАвтоПоиска = СформироватьМассивПолейАвтопоиска();
	СтруктураЗапроса = Новый Структура;
	
	Для Каждого Поле Из ПоляАвтоПоиска Цикл
		
		Если СтруктураДанных.Свойство(Поле) И ЗначениеЗаполнено(СтруктураДанных[Поле]) Тогда
			СтруктураЗапроса.Вставить(Поле, СтруктураДанных[Поле]);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция НайтиДанныеАвтозаполнения(СтруктураПоиска) Экспорт
	
	ПоляАвтоПоиска = СформироватьМассивПолейАвтопоиска();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ДанныеАвтозаполненияПлатежей.ШаблонНазначенияПлатежа КАК ШаблонНазначенияПлатежа,
	|	ДанныеАвтозаполненияПлатежей.Договор КАК Договор,
	|	ДанныеАвтозаполненияПлатежей.КатегорияОперации КАК КатегорияОперации,
	|	ВЫБОР
	|		КОГДА ДанныеАвтозаполненияПлатежей.ШаблонНазначенияПлатежа = """"
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сортировка,
	|	ДанныеАвтозаполненияПлатежей.УправленческийУчет.(
	|		Имя КАК Имя,
	|		Значение КАК Значение,
	|		АлгоритмВычисления КАК АлгоритмВычисления
	|	) КАК УправленческийУчет,
	|	ДанныеАвтозаполненияПлатежей.АлгоритмВычисления КАК АлгоритмВычисления,
	|	ДанныеАвтозаполненияПлатежей.СтатьяДДС КАК СтатьяДДС
	|ИЗ
	|	Справочник.ДанныеАвтозаполненияПлатежей КАК ДанныеАвтозаполненияПлатежей
	|ГДЕ
	|	НЕ ДанныеАвтозаполненияПлатежей.ПометкаУдаления
	|	И 1 = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка");
	
	Для Каждого ПолеПоиска Из ПоляАвтоПоиска Цикл
	
		Если ПолеПоиска <> "НазначениеПлатежа" И СтруктураПоиска.Свойство(ПолеПоиска) Тогда
			
			Если ПолеПоиска = "Организация" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "1 = 1 И (Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация = &Организация)");
			ИначеЕсли ПолеПоиска = "СчетОрганизации" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "1 = 1 И (СчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ИЛИ СчетОрганизации = &СчетОрганизации)");
			ИначеЕсли ПолеПоиска = "Контрагент" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "1 = 1 И (Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ИЛИ Контрагент = &Контрагент)");
			ИначеЕсли ПолеПоиска = "СчетКонтрагента" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "1 = 1 И (СчетКонтрагента = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ИЛИ СчетКонтрагента = &СчетКонтрагента)");
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "1 = 1 И " + ПолеПоиска + " = &" + ПолеПоиска);
			КонецЕсли;
			
			Запрос.УстановитьПараметр(ПолеПоиска, СтруктураПоиска[ПолеПоиска]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ГлавныйРезультат = Запрос.Выполнить();
	ГлавнаяВыборка = ГлавныйРезультат.Выбрать();
	
	СтруктураВозврата = Новый Структура;
	Для Каждого КлючЗначение Из СтруктураПоиска Цикл
		СтруктураВозврата.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	RegExp = RegularExpressions.ПолучитьОбъектRegExp();
	RegExp.MultiLine = Истина;  // истина — текст многострочный, ложь — одна строка
	RegExp.Global = Истина;     // истина — поиск по всей строке, ложь — до первого совпадения
	RegExp.IgnoreCase = Истина; // истина — игнорировать регистр строки при поиске
	
	СтруктураУУ = Новый Структура;
	
	Пока ГлавнаяВыборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ГлавнаяВыборка.ШаблонНазначенияПлатежа) Тогда
			
			RegExp.Pattern = ГлавнаяВыборка.ШаблонНазначенияПлатежа;
			Matches = RegExp.Execute(СтруктураПоиска.НазначениеПлатежа);
		
			Если Matches.Count() <> 0 Тогда
			
				СтруктураВозврата.Вставить("Договор", ГлавнаяВыборка.Договор);
				СтруктураВозврата.Вставить("КатегорияОперации", ГлавнаяВыборка.КатегорияОперации);
				СтруктураВозврата.Вставить("СтатьяДДС", ГлавнаяВыборка.СтатьяДДС);
				
				Если ЗначениеЗаполнено(СокрЛП(ГлавнаяВыборка.АлгоритмВычисления)) Тогда
					Попытка
						Выполнить(ГлавнаяВыборка.АлгоритмВычисления);
					Исключение
						Сообщить(ИнформацияОбОшибке());
					КонецПопытки;
				КонецЕсли;
				
				ВыборкаПоУправленческомуУчету = ГлавнаяВыборка.УправленческийУчет.Выбрать();
				Пока ВыборкаПоУправленческомуУчету.Следующий() Цикл
					
					Имя = ВыборкаПоУправленческомуУчету.Имя;
					Значение = ВыборкаПоУправленческомуУчету.Значение;
					НазначениеПлатежа = СтруктураПоиска.НазначениеПлатежа;
					
					Если ЗначениеЗаполнено(ВыборкаПоУправленческомуУчету.АлгоритмВычисления) Тогда
						Попытка
							Выполнить(ВыборкаПоУправленческомуУчету.АлгоритмВычисления);
						Исключение
							Сообщить(ИнформацияОбОшибке());
						КонецПопытки;
					КонецЕсли;
					
					СтруктураУУ.Вставить(Имя, Значение);
					
				КонецЦикла;
				
				Прервать;
			
			КонецЕсли;
			
		Иначе
			
			СтруктураВозврата.Вставить("Договор", ГлавнаяВыборка.Договор);
			СтруктураВозврата.Вставить("КатегорияОперации", ГлавнаяВыборка.КатегорияОперации);
			
			Если ЗначениеЗаполнено(СокрЛП(ГлавнаяВыборка.АлгоритмВычисления)) Тогда
				Попытка
					Выполнить(ГлавнаяВыборка.АлгоритмВычисления);
				Исключение
					Сообщить(ИнформацияОбОшибке());
				КонецПопытки;
			КонецЕсли;
			
			ВыборкаПоУправленческомуУчету = ГлавнаяВыборка.УправленческийУчет.Выбрать();
			Пока ВыборкаПоУправленческомуУчету.Следующий() Цикл
				
				Имя = ВыборкаПоУправленческомуУчету.Имя;
				Значение = ВыборкаПоУправленческомуУчету.Значение;
				НазначениеПлатежа = СтруктураПоиска.НазначениеПлатежа;
				
				Если ЗначениеЗаполнено(ВыборкаПоУправленческомуУчету.АлгоритмВычисления) Тогда
					Попытка
						Выполнить(ВыборкаПоУправленческомуУчету.АлгоритмВычисления);
					Исключение
						Сообщить(ИнформацияОбОшибке());
					КонецПопытки;
				КонецЕсли;
				
				СтруктураУУ.Вставить(Имя, Значение);
				
			КонецЦикла;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураВозврата.Вставить("ДанныеУправленческогоУчета", СтруктураУУ);
	
	Возврат СтруктураВозврата;
	
КонецФункции