
Процедура ФормированиеПереводовДенежныхСредств() Экспорт
	
	//Обработки.ЗагрузкаПереводовДенежныхСредств.ЗапуститьФормированиеПереводов();
	
КонецПроцедуры

Процедура ФормированиеСтатистики() Экспорт
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ПоступлениеНаРасчетныйСчет.СтатьяДДС КАК СтатьяДДС,
	//|	КОЛИЧЕСТВО(ПоступлениеНаРасчетныйСчет.СтатьяДДС) КАК Количество,
	//|	ПоступлениеНаРасчетныйСчет.СтатьяДДС.КатегорияДвиженияДенежныхСредств КАК КатегорияДвиженияДенежныхСредств
	//|ИЗ
	//|	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	//|ГДЕ
	//|	ПоступлениеНаРасчетныйСчет.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//|	И ПоступлениеНаРасчетныйСчет.Проведен
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПоступлениеНаРасчетныйСчет.СтатьяДДС,
	//|	ПоступлениеНаРасчетныйСчет.СтатьяДДС.КатегорияДвиженияДенежныхСредств
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	СписаниеСРасчетногоСчета.СтатьяДДС,
	//|	КОЛИЧЕСТВО(СписаниеСРасчетногоСчета.СтатьяДДС),
	//|	СписаниеСРасчетногоСчета.СтатьяДДС.КатегорияДвиженияДенежныхСредств
	//|ИЗ
	//|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	//|ГДЕ
	//|	СписаниеСРасчетногоСчета.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//|	И СписаниеСРасчетногоСчета.Проведен
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СписаниеСРасчетногоСчета.СтатьяДДС,
	//|	СписаниеСРасчетногоСчета.СтатьяДДС.КатегорияДвиженияДенежныхСредств";
	//
	//Запрос.УстановитьПараметр("ДатаНачала", ДобавитьМесяц(ТекущаяДата(), -2));
	//Запрос.УстановитьПараметр("ДатаОкончания", ТекущаяДата());
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	
	//	Запись = РегистрыСведений.СтатистическийАнализ.СоздатьМенеджерЗаписи();
	//	Запись.ОбъектАнализа = ВыборкаДетальныеЗаписи.СтатьяДДС;
	//	Запись.ЧастотаИспользования = ВыборкаДетальныеЗаписи.Количество;
	//	Запись.Записать(Истина);
	//	
	//КонецЦикла;
	
КонецПроцедуры


// Автоматическая загрузка ЦФУ

&НаСервере
Процедура АвтоматическаяЗагрузкаЦФУ() Экспорт
	
	ТекстЗапроса = "SELECT * FROM [1C8_REF].[dbo].[TSFU]";
	
	СоединениеАДО = ЗапросыЧерезАДО.ПолучитьСоединениеАДО("1C8_REF");
	ТаблицаДанных = ЗапросыЧерезАДО.ВыполнитьЗапросАДО(СоединениеАДО, ТекстЗапроса);
	ТаблицаДанных.Колонки.Добавить("НомерПрохода", Новый ОписаниеТипов("Число"));
	
	ТаблицаДанных.Сортировать("Родитель");
	
	ДеревоЦФУ = Новый ДеревоЗначений;
	ДеревоЦФУ.Колонки.Добавить("Код");
	ДеревоЦФУ.Колонки.Добавить("КодРодителя");
	ДеревоЦФУ.Колонки.Добавить("Наименование");
	ДеревоЦФУ.Колонки.Добавить("ПолноеНаименование");
	
	Для НомерПрохода = 0 По 2 Цикл
		
		Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
			
			Если СтрокаТаблицы.НомерПрохода < НомерПрохода Тогда
				Продолжить;
			КонецЕсли;
			
			Если СокрЛП(СтрокаТаблицы.Родитель) = "" Тогда
				НовыйЭлементДерева = ДеревоЦФУ.Строки.Добавить();
			Иначе
				ЭлементыРодитель = ДеревоЦФУ.Строки.НайтиСтроки(Новый Структура("Код", СтрокаТаблицы.Родитель), Истина);
				Если ЭлементыРодитель.Количество() > 0 Тогда
					НовыйЭлементДерева = ЭлементыРодитель[0].Строки.Добавить();
					
				Иначе
					СтрокаТаблицы.НомерПрохода = СтрокаТаблицы.НомерПрохода + 1;
					Продолжить;
					
				КонецЕсли;
				
			КонецЕсли;
			
			НовыйЭлементДерева.Код = СтрокаТаблицы.Код;
			НовыйЭлементДерева.КодРодителя = СтрокаТаблицы.Родитель;
			НовыйЭлементДерева.Наименование = СтрокаТаблицы.Наименование;
			НовыйЭлементДерева.ПолноеНаименование = СтрокаТаблицы.ПолныйРодитель;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаДерева Из ДеревоЦФУ.Строки Цикл
		ОбработатьЭлементДерева(СтрокаДерева);
	КонецЦикла;
	
КонецПроцедуры


Процедура ОбработатьЭлементДерева(УзелДерева)
	
	ЭлементСправочникаЦФУ = Справочники.ЦФУ.НайтиПоКоду(УзелДерева.Код);
	
	Если УзелДерева.Родитель = Неопределено Тогда
		ЭлементРодителяСправочникаЦФУ = Справочники.ЦФУ.ПустаяСсылка();
	Иначе
		ЭлементРодителяСправочникаЦФУ = Справочники.ЦФУ.НайтиПоКоду(УзелДерева.Родитель.Код);
	КонецЕсли;
	
	Если ЭлементСправочникаЦФУ = Справочники.ЦФУ.ПустаяСсылка() Тогда
		ОбъектЦФУ = Справочники.ЦФУ.СоздатьЭлемент();
	Иначе
		ОбъектЦФУ = ЭлементСправочникаЦФУ.ПолучитьОбъект();
	КонецЕсли;
	
	ОбъектЦФУ.Код = УзелДерева.Код;
	ОбъектЦФУ.Родитель = ЭлементРодителяСправочникаЦФУ;
	ОбъектЦФУ.Наименование = УзелДерева.Наименование;
	ОбъектЦФУ.ПолноеНаименование = УзелДерева.ПолноеНаименование;
	ОбъектЦФУ.Записать();
	
	
	Для Каждого СтрокаДерева Из УзелДерева.Строки Цикл
		ОбработатьЭлементДерева(СтрокаДерева);
	КонецЦикла;
	
КонецПроцедуры
