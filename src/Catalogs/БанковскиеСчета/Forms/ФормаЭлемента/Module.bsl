&НаКлиенте 
Перем ТекущийТекстНомераСчета; // Текст, набранный в поле ввода номера счета

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Элементы.ГруппаВалютныйСчет.Видимость = Объект.Валютный;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		
		Если ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Параметры.ЗначенияЗаполнения);
		КонецЕсли;
		
		Если Параметры.Свойство("Владелец") Тогда
			Объект.Владелец = Параметры.Владелец;
		КонецЕсли;
		
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
	//		
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		НСтр("ru = 'Не указан владелец банковского счета!'"),,,, Отказ);
	//	Возврат;
	//	
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		Элементы.Владелец.Вид = ВидПоляФормы.ПолеНадписи;
	КонецЕсли;
		
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Элементы.Владелец.Заголовок = НСтр("ru = 'Контрагент'");
		Элементы.ГруппаДатыОткрытияЗакрытияСчета.Видимость = Ложь;
		
		ВладелецПарногоДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ВнутренняяОрганизация");
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		
		Элементы.Владелец.Видимость = Истина;
		Элементы.Владелец.Заголовок = НСтр("ru = 'Организация'");
		
		//УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Владелец));
		
		ВладелецПарногоДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ВнутреннийКонтрагент");
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		Элементы.Владелец.Заголовок = НСтр("ru = 'Физическое лицо'");
		
		Элементы.ГруппаДатыОткрытияЗакрытияСчета.Видимость = Ложь;
		Элементы.ГруппаВидСчетаНомерИДатаРазрешения.Видимость = Ложь;
		
	Иначе
		
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//НСтр("ru = 'Неверно указан владелец банковского счета!'"),,,, Отказ);
		//Возврат;
		
	КонецЕсли;
	
	Если Элементы.ВалютаДенежныхСредств.Видимость Тогда
		Если Параметры.ЗначенияЗаполнения.Свойство("ВалютаДенежныхСредств") И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.ВалютаДенежныхСредств)
			И Параметры.ЗначенияЗаполнения.Свойство("Валютный") Тогда
			Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПодготовитьФормуНаСервере()
	
	ЦветВыделенияНекорректногоЗначение = ЦветаСтиля.ПоясняющийОшибкуТекст;
	
	ЗаполнитьРеквизитыБанков();
	БанковскиеСчетаФормыКлиентСервер.ИзменитьДлинуНомераСчета(ЭтотОбъект, ЯвляетсяБанкомРФ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыБанков()
	
	РеквизитыБанка = БанковскиеСчетаВызовСервера.ПолучитьРеквизитыБанкаИзСправочника(Объект.Банк);
	ОбновитьРеквизитыБанкаНаФорме(ЭтотОбъект, РеквизитыБанка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРеквизитыБанкаНаФорме(Форма, РеквизитыБанка)
	
	Если ЗначениеЗаполнено(РеквизитыБанка.Ссылка) Тогда
		
		Если РеквизитыБанка.ЯвляетсяБанкомРФ Тогда 
			Форма.БИКБанка = РеквизитыБанка.Код;
		Иначе
			Форма.БИКБанка = РеквизитыБанка.СВИФТБИК;
		КонецЕсли;
		
		Форма.НаименованиеБанка = РеквизитыБанка.Наименование;
		Форма.ДеятельностьБанкаПрекращена = РеквизитыБанка.ДеятельностьПрекращена;
		Форма.ЯвляетсяБанкомРФ = РеквизитыБанка.ЯвляетсяБанкомРФ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.УправлениеПечатью
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УправлениеПечатью
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Объект.НомерСчета = СтрЗаменить(Объект.НомерСчета, " ", "");
	
	Элементы.ПодсказкаНомерСчета.Гиперссылка = Ложь;
	БанковскиеСчетаФормыКлиент.УстановитьВалютуПодсказкуСчета(
	Объект, ЭтотОбъект, БИКБанка, ЦветВыделенияНекорректногоЗначение, ЯвляетсяБанкомРФ);
	
	ДоступностьВалютыСчета(ЭтотОбъект);
	ДоступностьНомераИДатыРазрешения(ЭтотОбъект);
	//УстановитьНаименованиеСчета(ЭтотОбъект, Истина);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ТекущийТекстНомераСчета = СтрЗаменить(Текст," ","");
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьПодсказкуНомераСчета", 0.1, Истина);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Банк) Тогда
		БИКБанка = "";
		НаименованиеБанка = "";
		ДеятельностьБанкаПрекращена = Ложь;
		ЯвляетсяБанкомРФ = Ложь;
	КонецЕсли;
	
	БанковскиеСчетаФормыКлиентСервер.ИзменитьДлинуНомераСчета(ЭтотОбъект, ЯвляетсяБанкомРФ);
	Объект.НомерСчета = Элементы.НомерСчета.ОграничениеТипа.ПривестиЗначение(Объект.НомерСчета);
	
	Элементы.ПодсказкаНомерСчета.Гиперссылка = Ложь;
	БанковскиеСчетаФормыКлиент.УстановитьВалютуПодсказкуСчета(
	Объект, ЭтотОбъект, БИКБанка, ЦветВыделенияНекорректногоЗначение, ЯвляетсяБанкомРФ);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОДКЛЮЧАЕМЫЕ ОБРАБОТЧИКИ

&НаКлиенте
Процедура Подключаемый_УстановитьПодсказкуНомераСчета()
	
	Элементы.ПодсказкаНомерСчета.Гиперссылка = Ложь;
	Если ЯвляетсяБанкомРФ Тогда
		
		Если Не БанковскиеПравила.ПроверитьДлинуНомераСчета(ТекущийТекстНомераСчета) Тогда
			ПодсказкаНомерСчета = БанковскиеСчетаФормыКлиент.ПодсказкаВводаПоляНомерСчета(ТекущийТекстНомераСчета, БИКБанка);
		Иначе
			ПодсказкаНомерСчета = БанковскиеСчетаФормыКлиентСервер.ПодсказкаПоляНомерСчета(ТекущийТекстНомераСчета, БИКБанка, ЯвляетсяБанкомРФ, ЦветВыделенияНекорректногоЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	//УстановитьНаименованиеСчета(Форма);
	
	Форма.ПодсказкаБанк = БанковскиеСчетаФормыКлиентСервер.ПодсказкаПоляБанка(Форма.ДеятельностьБанкаПрекращена);
	
	Если Не ЗначениеЗаполнено(Форма.ПодсказкаНомерСчета)
		ИЛИ Элементы.ПодсказкаНомерСчета.Гиперссылка Тогда
		
		Элементы.ПодсказкаНомерСчета.Гиперссылка = Ложь;
		Форма.ПодсказкаНомерСчета = БанковскиеСчетаФормыКлиентСервер.ПодсказкаПоляНомерСчета(
		Форма.Объект.НомерСчета, Форма.БИКБанка, Форма.ЯвляетсяБанкомРФ, Форма.ЦветВыделенияНекорректногоЗначение);
		
	КонецЕсли;
	
	ВидимостьРеквизитовБанкаРФ = Форма.ЯвляетсяБанкомРФ Или Не ЗначениеЗаполнено(Объект.Банк);
	
	ДоступностьВалютыСчета(Форма);
	ДоступностьНомераИДатыРазрешения(Форма);
	Элементы.ГруппаВалютныйСчет.Видимость = Объект.Валютный;
	Элементы.ГруппаВидСчетаНомерИДатаРазрешения.Видимость = Объект.Валютный;
	
КонецПроцедуры

//&НаКлиентеНаСервереБезКонтекста
//Процедура УстановитьНаименованиеСчета(Форма, ИзменениеНомераСчета = Ложь)
	
	//Объект = Форма.Объект;
	//
	//Если ПустаяСтрока(Объект.Наименование) ИЛИ Объект.Наименование = Форма.АвтоНаименование Тогда
	//	Форма.АвтоНаименование = СформироватьАвтоНаименование(Форма);
	//	Если НЕ ПустаяСтрока(Форма.АвтоНаименование) И Форма.АвтоНаименование <> Объект.Наименование Тогда
	//		Объект.Наименование = Форма.АвтоНаименование;
	//	КонецЕсли;
	//Иначе
	//	Если ИзменениеНомераСчета И НЕ ПустаяСтрока(Форма.НомерСчетаТекущий) Тогда
	//		Объект.Наименование = СтрЗаменить(Объект.Наименование, Форма.НомерСчетаТекущий, СокрЛП(Объект.НомерСчета));
	//	КонецЕсли;
	//	
	//	Форма.АвтоНаименование = СформироватьАвтоНаименование(Форма, Объект.Наименование);
	//КонецЕсли;
	//
	//Форма.НомерСчетаТекущий = СокрЛП(Объект.НомерСчета);
	
//КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДоступностьВалютыСчета(Форма);
	
	Форма.Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Форма.ЯвляетсяБанкомРФ;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДоступностьНомераИДатыРазрешения(Форма)
	
	Форма.Элементы.НомерИДатаРазрешения.Доступность = Форма.Объект.Валютный;
	
КонецПроцедуры

//&НаКлиентеНаСервереБезКонтекста
//Функция СформироватьАвтоНаименование(Форма, Знач Текст = "")
	
	//Элементы     = Форма.Элементы;
	//Объект       = Форма.Объект;
	//
	//ПредставлениеВалюты = "" + Объект.ВалютаДенежныхСредств;
	//
	//ПредставлениеБанка = "";
	//Если ЗначениеЗаполнено(Объект.Банк) Тогда
	//	ПредставлениеБанка = СокрЛП(Форма.НаименованиеБанка);
	//КонецЕсли;
	//
	//Элементы.Наименование.СписокВыбора.Очистить();
	//
	//СтрокаНаименования1 = УчетДенежныхСредствКлиентСервер.НаименованиеБанковскогоСчетаПоУмолчанию(
	//	Объект.НомерСчета,
	//	ПредставлениеБанка,
	//	ПредставлениеВалюты,
	//	Объект.Валютный,
	//	1); // Вариант по умолчанию выводим последним
	//
	//Если НЕ ПустаяСтрока(СтрокаНаименования1) Тогда
	//	Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования1));
	//КонецЕсли;
	//
	//СтрокаНаименования2 = УчетДенежныхСредствКлиентСервер.НаименованиеБанковскогоСчетаПоУмолчанию(
	//	Объект.НомерСчета,
	//	ПредставлениеБанка,
	//	ПредставлениеВалюты,
	//	Объект.Валютный,
	//	2);
	//
	//Строки1и2НеРавны = СокрЛП(СтрокаНаименования2) <> "(" + СтрокаНаименования1 + ")";
	//Если СтрокаНаименования2 <> "" И Строки1и2НеРавны
	//		И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования2) = Неопределено Тогда
	//	Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования2));
	//КонецЕсли;
	//
	//СтрокаНаименования = БанковскиеСчетаФормыКлиентСервер.НаименованиеБанковскогоСчета(Объект, ПредставлениеБанка);
	//
	//Если НЕ ПустаяСтрока(СтрокаНаименования) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования) = Неопределено Тогда
	//	Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования));
	//КонецЕсли;
	//
	//Если НЕ ПустаяСтрока(Текст) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(Текст) = Неопределено Тогда
	//	Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(Текст));
	//КонецЕсли;
	//
	//Возврат СтрокаНаименования;
	
//КонецФункции


&НаКлиенте
Процедура БанкОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РеквизитыБанка = БанковскиеСчетаФормыКлиент.ПолучитьДанныеБанка(ВыбранноеЗначение);
	ВыбранноеЗначение = РеквизитыБанка.ссылка;
	
	ОбновитьРеквизитыБанкаНаФорме(ЭтотОбъект, РеквизитыБанка); 
	
КонецПроцедуры

