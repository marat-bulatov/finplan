
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	//ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	
	ОбновитьНадписиСторонДоговора();
	
	// Парный договор
	Если НЕ Параметры.Ключ.Пустая() Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПарныеДоговоры.ПарныйДоговор КАК ПарныйДоговор
		|ИЗ
		|	РегистрСведений.ПарныеДоговоры КАК ПарныеДоговоры
		|ГДЕ
		|	ПарныеДоговоры.Договор = &Договор");
		Запрос.УстановитьПараметр("Договор", Объект.Ссылка);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПарныйДоговор = Выборка.ПарныйДоговор;
			
		КонецЕсли;
		
		
	КонецЕсли;
	
	Элементы.ФормаУправленческийУчет.Видимость = РольДоступна("РедактированиеУправленческогоУчетаДоговоров") ИЛИ РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.УправлениеПечатью
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УправлениеПечатью
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ПрисоединенныеФайлы, "ВладелецФайла", Объект.Ссылка, Истина);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(РаспределениеПоЦФУ, "ДоговорКонтрагента", Объект.Ссылка);
	//ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(РаспределениеПоЦФУ, "Период", ТекущаяДата(), Истина);
	
	ОбновитьСодержимоеФормы();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПрисоединенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ПрисоединенныеФайлы.РежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ПрисоединенныеФайлы.ТекущиеДанные;
	
	Если Элементы.ПрисоединенныеФайлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КакОткрывать = РаботаСФайламиСлужебныйКлиент.ПерсональныеНастройкиРаботыСФайлами().ДействиеПоДвойномуЩелчкуМыши;
	
	Если КакОткрывать = "ОткрыватьКарточку" Тогда
		ПоказатьЗначение(, ВыбраннаяСтрока);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(ВыбраннаяСтрока,
		Неопределено, УникальныйИдентификатор, Неопределено, ПредыдущийАдресФайла);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	Обработчик = Новый ОписаниеОповещения("ПрисоединенныеФайлыВыборПослеВыбораРежимаРедактирования", ЭтотОбъект, ПараметрыОбработчика);
	
	РаботаСФайламиСлужебныйКлиент.ВыбратьРежимИРедактироватьФайл(Обработчик, ДанныеФайла, Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ПрисоединенныеФайлыВыборПослеВыбораРежимаРедактирования(Результат, ПараметрыВыполнения) Экспорт
	
	РезультатОткрыть = "Открыть";
	РезультатРедактировать = "Редактировать";
	
	Если Результат = РезультатРедактировать Тогда
		Обработчик = Новый ОписаниеОповещения("ПрисоединенныеФайлыВыборПослеРедактированияФайла", ЭтотОбъект, ПараметрыВыполнения);
		РаботаСФайламиСлужебныйКлиент.РедактироватьФайл(Обработчик, ПараметрыВыполнения.ДанныеФайла);
	ИначеЕсли Результат = РезультатОткрыть Тогда
		РаботаСФайламиСлужебныйКлиент.ОткрытьФайлСОповещением(Неопределено, ПараметрыВыполнения.ДанныеФайла, УникальныйИдентификатор); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборПослеРедактированияФайла(Результат, ПараметрыВыполнения) Экспорт
	
	ОповеститьОбИзменении(ПараметрыВыполнения.ДанныеФайла.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// Парные договоры
	Если НЕ ЗначениеЗаполнено(ПарныйДоговор) Тогда // Удаляем парную запись
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПарныеДоговоры.Договор КАК Договор
		|ИЗ
		|	РегистрСведений.ПарныеДоговоры КАК ПарныеДоговоры
		|ГДЕ
		|	ПарныеДоговоры.ПарныйДоговор = &Договор");
		
		Запрос.УстановитьПараметр("Договор", Объект.Ссылка);
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			Запись = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
			Запись.Договор = Выборка.Договор;
			Запись.Удалить();
			
		КонецЕсли;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ПарныеДоговоры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Договор.Установить(Объект.Ссылка);
	Если ЗначениеЗаполнено(ПарныйДоговор) Тогда
		
		Запись = НаборЗаписей.Добавить();
		Запись.Договор = Объект.Ссылка;
		Запись.ПарныйДоговор = ПарныйДоговор;
		
		ПарнаяЗапись = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
		ПарнаяЗапись.Договор = ПарныйДоговор;
		ПарнаяЗапись.ПарныйДоговор = Объект.Ссылка;
		ПарнаяЗапись.Записать(Истина);
		
	КонецЕсли;
	НаборЗаписей.Записать(Истина);
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСодержимоеФормы()
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("УказыватьОбщуюСумму", Элементы.ГруппаОбщие);
	Соответствие.Вставить("УказыватьСуммуВМесяц", Элементы.ГруппаЗаМесяц);
	Соответствие.Вставить("УказыватьСуммуВГод", Элементы.ГруппаЗаГод);
	Соответствие.Вставить("УказыватьЦенуЗаМетр", Элементы.ГруппаЗаМетр);
	Соответствие.Вставить("УказыватьДополнительнуюСумму", Элементы.ГруппаДополнительно);
	Соответствие.Вставить("УказыватьПлощадь", Элементы.ГруппаПлощадь);
	
	Для Каждого КлючЗначение Из Соответствие Цикл
		
		Если ЗначениеЗаполнено(Объект.ТипДоговора) Тогда
			КлючЗначение.Значение.Видимость = Объект.ТипДоговора[КлючЗначение.Ключ];
		Иначе
			КлючЗначение.Значение.Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.Наименование = "" + Объект.ТипДоговора + " №" + Объект.НомерДоговора;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДоговораПриИзменении(Элемент)
	
	ОбновитьСодержимоеФормы();
	ОбновитьНадписиСторонДоговора();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписиСторонДоговора()
	
	Если ЗначениеЗаполнено(Объект.ТипДоговора) Тогда
		ДанныеТипаДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ТипДоговора, "НаименованиеСтороны1, НаименованиеСтороны2");
		
		Если НЕ Объект.ЗеркальноеНаименованиеСторонДоговора Тогда
			Элементы.Организация.Заголовок = СокрЛП(ДанныеТипаДоговора.НаименованиеСтороны1);
			Элементы.Владелец.Заголовок = СокрЛП(ДанныеТипаДоговора.НаименованиеСтороны2);
		Иначе
			Элементы.Организация.Заголовок = СокрЛП(ДанныеТипаДоговора.НаименованиеСтороны2);
			Элементы.Владелец.Заголовок = СокрЛП(ДанныеТипаДоговора.НаименованиеСтороны1);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗеркальноеНаименованиеСторонДоговораПриИзменении(Элемент)
	ОбновитьНадписиСторонДоговора();
КонецПроцедуры


&НаКлиенте
Процедура ПарныйДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураДанных = ПолучитьВнутренниеОрганизациюИВладельца();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", СтруктураДанных.Организация);
	ПараметрыФормы.Вставить("Владелец", СтруктураДанных.Владелец);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВнутренниеОрганизациюИВладельца()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Организация", Объект.Владелец.ВнутренняяОрганизация);
	СтруктураВозврата.Вставить("Владелец", Объект.Организация.ВнутреннийКонтрагент);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПарныйДоговор = ВыбранноеЗначение;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДоговораПриИзменении(Элемент)
	ОбновитьСодержимоеФормы();
КонецПроцедуры

//&НаКлиенте
//Процедура РаспределениеПоЦФУПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
//	
//	Если НЕ Параметры.Ключ.Пустая() Тогда
//		Отказ = Истина;
//	    ПараметрыОткрытия = Новый Структура("ДоговорКонтрагента", Объект.Ссылка);
//		ОткрытьФорму("РегистрСведений.ПривязкиДоговоровЦФУ.Форма.ФормаЗаписи", ПараметрыОткрытия, ЭтотОбъект);
//	КонецЕсли;
//	
//КонецПроцедуры

&НаКлиенте
Процедура УправленческийУчет(Команда)
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаУправленческийУчет", Новый Структура("ДоговорКонтрагента", Объект.Ссылка), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ПоказатьПредупреждение(, "Необходимо записать элемент справочника!");
	КонецЕсли;
	
КонецПроцедуры

