
Процедура ПередЗаписью(Отказ)
	
	Наименование = "" + ТипДоговора + " №" + НомерДоговора;
	
	Если ЭтоНовый() Тогда
		
		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты")
			И Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "ВнутренняяОрганизация")) Тогда
			Внешний = Истина;
		Иначе
			Внешний = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Содержание = ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML(СокрЛП(Содержание));
	
	Если НЕ ЗначениеЗаполнено(ВидРезидентностиКонтрагента) Тогда
		Если НЕ Владелец.ЭтоИностранныйКонтрагент Тогда
			ВидРезидентностиКонтрагента = Перечисления.ВидыРезидентностиКонтрагентов.Резидент;
		Иначе
			ВидРезидентностиКонтрагента = Перечисления.ВидыРезидентностиКонтрагентов.НеРезидент;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	// 1. Проверяем есть ли уже записи регистра
	// 1.1 Если есть - синхронизируем реквизиты договоров
	// 1.2 Если нет - ищем парный договор по реквизитам
	// 1.2.1 Если нашли - создаем записи регистров с найденным договором
	// 1.2.2 Если не нашли - создаем парный договор и создаем записи регистра 
	
	Если ДополнительныеСвойства.Свойство("ЗаписьПарногоДоговора") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПроверкаПарногоДоговора = Новый Запрос("ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ВЫБОР
	|		КОГДА НЕ ПарныеДоговорыОсновнойДоговор.Договор ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьЗаписьОсновногоДоговора,
	|	ВЫБОР
	|		КОГДА НЕ ПарныеДоговорыПарныйДоговор.ПарныйДоговор ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьЗаписьПарногоДоговора,
	|	ПарныеДоговорыОсновнойДоговор.ПарныйДоговор КАК ПарныйДоговор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПарныеДоговоры КАК ПарныеДоговорыОсновнойДоговор
	|		ПО (ПарныеДоговорыОсновнойДоговор.Договор = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПарныеДоговоры КАК ПарныеДоговорыПарныйДоговор
	|		ПО ДоговорыКонтрагентов.Ссылка = ПарныеДоговорыПарныйДоговор.ПарныйДоговор
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Договор
	|	И ДоговорыКонтрагентов.Владелец.ВнутренняяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
	
	ЗапросПроверкаПарногоДоговора.УстановитьПараметр("Договор", Ссылка);
	ВыборкаПроверкаПарногоДоговора = ЗапросПроверкаПарногоДоговора.Выполнить().Выбрать();
	
	Если ВыборкаПроверкаПарногоДоговора.Следующий() Тогда
		
		Если ВыборкаПроверкаПарногоДоговора.ЕстьЗаписьОсновногоДоговора И ВыборкаПроверкаПарногоДоговора.ЕстьЗаписьПарногоДоговора Тогда
			
			Если ПометкаУдаления Тогда
				
				ЗаписьРегистраПарныеДоговоры1 = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
				ЗаписьРегистраПарныеДоговоры1.Договор = ВыборкаПроверкаПарногоДоговора.Договор;
				ЗаписьРегистраПарныеДоговоры1.Удалить();
				
				ЗаписьРегистраПарныеДоговоры2 = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
				ЗаписьРегистраПарныеДоговоры2.Договор = ВыборкаПроверкаПарногоДоговора.ПарныйДоговор;
				ЗаписьРегистраПарныеДоговоры2.Удалить();
				
			Иначе
				
				// Синхронизируем реквизиты парного договора
				ПарныйДоговорОбъект = ВыборкаПроверкаПарногоДоговора.ПарныйДоговор.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(ПарныйДоговорОбъект, ЭтотОбъект,, "Организация, Владелец, Родитель, Код, ПометкаУдаления");
				
				ПарныйДоговорОбъект.КонтрольКопий.Очистить();
				Для Каждого СтрокаТЧ Из ЭтотОбъект.КонтрольКопий Цикл
					ЗаполнитьЗначенияСвойств(ПарныйДоговорОбъект.КонтрольКопий.Добавить(), СтрокаТЧ);
				КонецЦикла;
				
				ПарныйДоговорОбъект.ДополнительныеСвойства.Вставить("ЗаписьПарногоДоговора", Истина);
				ПарныйДоговорОбъект.Записать();
				
			КонецЕсли;
			
		Иначе
			
			// Ищем парный договор по реквизитам
			
			ЗапросПоискаПарногоДоговора = Новый Запрос("ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Договор,
			|	ДоговорыКонтрагентов.Организация.ВнутреннийКонтрагент КАК КонтрагентОрганизации,
			|	ДоговорыКонтрагентов.Владелец.ВнутренняяОрганизация КАК ОрганизацияКонтрагента,
			|	ДоговорыКонтрагентов.НомерДоговора КАК НомерДоговора,
			|	ДоговорыКонтрагентов.ДатаДоговора КАК ДатаДоговора,
			|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Содержание КАК СТРОКА(1024)) КАК Содержание,
			|	ДоговорыКонтрагентов.КатегорияОперации КАК КатегорияОперации,
			|	ДоговорыКонтрагентов.ДатаНачалаДействия КАК ДатаНачалаДействия,
			|	ДоговорыКонтрагентов.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
			|	ДоговорыКонтрагентов.ТипДоговора КАК ТипДоговора
			|ПОМЕСТИТЬ ВТ_Договор
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Ссылка = &Договор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВТ_Договор.Договор КАК Договор,
			|	ДоговорыКонтрагентов.Ссылка КАК ПарныйДоговор,
			|	ДоговорыКонтрагентов.Организация КАК Организация,
			|	ВТ_Договор.ОрганизацияКонтрагента КАК ВнутренняяОрганизация,
			|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
			|	ВТ_Договор.КонтрагентОрганизации КАК ВнутреннийКонтрагент,
			|	ДоговорыКонтрагентов.НомерДоговора КАК НомерДоговора,
			|	ДоговорыКонтрагентов.ДатаДоговора КАК ДатаДоговора,
			|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Содержание КАК СТРОКА(1024)) КАК Содержание,
			|	ВТ_Договор.КатегорияОперации КАК КатегорияОперации,
			|	ДоговорыКонтрагентов.КатегорияОперации КАК КатегорияОперацииПарногоДоговора,
			|	ВТ_Договор.ДатаНачалаДействия КАК ДатаНачалаДействия,
			|	ВТ_Договор.ДатаОкончанияДействия КАК ДатаОкончанияДействия
			|ИЗ
			|	ВТ_Договор КАК ВТ_Договор
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|		ПО ВТ_Договор.КонтрагентОрганизации = ДоговорыКонтрагентов.Владелец
			|			И ВТ_Договор.ОрганизацияКонтрагента = ДоговорыКонтрагентов.Организация
			|			И ВТ_Договор.НомерДоговора = ДоговорыКонтрагентов.НомерДоговора
			|			И ВТ_Договор.ДатаДоговора = ДоговорыКонтрагентов.ДатаДоговора
			|			И (ВТ_Договор.Содержание = (ВЫРАЗИТЬ(ДоговорыКонтрагентов.Содержание КАК СТРОКА(1024))))
			|			И ВТ_Договор.ДатаНачалаДействия = ДоговорыКонтрагентов.ДатаНачалаДействия
			|			И ВТ_Договор.ДатаОкончанияДействия = ДоговорыКонтрагентов.ДатаОкончанияДействия
			|			И ВТ_Договор.ТипДоговора = ДоговорыКонтрагентов.ТипДоговора");
			
			ЗапросПоискаПарногоДоговора.УстановитьПараметр("Договор", Ссылка);
			ВыборкаПоискаПарногоДоговора = ЗапросПоискаПарногоДоговора.Выполнить().Выбрать();
			ВыборкаПоискаПарногоДоговора.Следующий();
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПоискаПарногоДоговора.ПарныйДоговор) Тогда
				// Создаем парный договор
				ПарныйДоговор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				
			Иначе
				// Используем карточку парного договора
				ПарныйДоговор = ВыборкаПоискаПарногоДоговора.ПарныйДоговор.ПолучитьОбъект();
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ПарныйДоговор, ЭтотОбъект,, "Организация, Владелец, Родитель, Код, ПометкаУдаления");
			ПарныйДоговор.КонтрольКопий.Очистить();
			Для Каждого СтрокаТЧ Из ЭтотОбъект.КонтрольКопий Цикл
				ЗаполнитьЗначенияСвойств(ПарныйДоговор.КонтрольКопий.Добавить(), СтрокаТЧ);
			КонецЦикла;
			
			ПарныйДоговор.Организация = ВыборкаПоискаПарногоДоговора.ВнутренняяОрганизация;
			ПарныйДоговор.Владелец = ВыборкаПоискаПарногоДоговора.ВнутреннийКонтрагент;
			ПарныйДоговор.КатегорияОперации = ВыборкаПоискаПарногоДоговора.КатегорияОперации;
			ПарныйДоговор.ДополнительныеСвойства.Вставить("ЗаписьПарногоДоговора", Истина);
			ПарныйДоговор.Записать();
			
			ПарныйДоговорСсылка = ПарныйДоговор.Ссылка;
			
			// Создаем записи регистров
			
			ЗаписьРегистраПарныеДоговоры1 = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
			ЗаписьРегистраПарныеДоговоры1.Договор = Ссылка;
			ЗаписьРегистраПарныеДоговоры1.ПарныйДоговор = ПарныйДоговорСсылка;
			ЗаписьРегистраПарныеДоговоры1.Записать();
			
			ЗаписьРегистраПарныеДоговоры2 = РегистрыСведений.ПарныеДоговоры.СоздатьМенеджерЗаписи();
			ЗаписьРегистраПарныеДоговоры2.Договор = ПарныйДоговорСсылка;
			ЗаписьРегистраПарныеДоговоры2.ПарныйДоговор = Ссылка;
			ЗаписьРегистраПарныеДоговоры2.Записать();
			
			СкопироватьЗаписиПривязокЦФУПарномуДоговору(Ссылка, ПарныйДоговорСсылка);
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СкопироватьЗаписиПривязокЦФУПарномуДоговору(ДоговорИсточник, ДоговорПриемник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПривязкиДоговоровЦФУ.Период КАК Период,
	|	&ДоговорПриемник КАК ДоговорКонтрагента,
	|	ПривязкиДоговоровЦФУ.ЦФУ КАК ЦФУ,
	|	ПривязкиДоговоровЦФУ.Процент КАК Процент
	|ИЗ
	|	РегистрСведений.ПривязкиДоговоровЦФУ КАК ПривязкиДоговоровЦФУ
	|ГДЕ
	|	ПривязкиДоговоровЦФУ.ДоговорКонтрагента = &ДоговорИсточник";
	
	Запрос.УстановитьПараметр("ДоговорИсточник", ДоговорИсточник);
	Запрос.УстановитьПараметр("ДоговорПриемник", ДоговорПриемник);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Набор = РегистрыСведений.ПривязкиДоговоровЦФУ.СоздатьНаборЗаписей();
	Набор.Отбор.ДоговорКонтрагента.Установить(ДоговорПриемник);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Набор.Записать();
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПарныеДоговоры.Договор КАК Договор
	|ИЗ
	|	РегистрСведений.ПарныеДоговоры КАК ПарныеДоговоры
	|ГДЕ
	|	(ПарныеДоговоры.Договор = &Договор
	|			ИЛИ ПарныеДоговоры.ПарныйДоговор = &Договор)";
	
	Запрос.УстановитьПараметр("Договор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Набор = РегистрыСведений.ПарныеДоговоры.СоздатьНаборЗаписей();
			Набор.Отбор.Договор.Установить(ВыборкаДетальныеЗаписи.Договор);
			Набор.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры



