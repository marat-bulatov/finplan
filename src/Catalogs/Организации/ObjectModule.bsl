
Процедура ПриЗаписи(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ВнутреннийКонтрагент) Тогда
		
		ВнутреннийКонтрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ИНН);
		
		Если НЕ ЗначениеЗаполнено(ВнутреннийКонтрагент) Тогда
			
			СтруктураПараметров = РаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(ИНН);
			
			КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(КонтрагентОбъект, СтруктураПараметров);
			Если СтрДлина(ИНН) = 10 Тогда
				КонтрагентОбъект.ВидКонтрагента = Перечисления.ВидыКонтрагента.ЮридическоеЛицо;
			ИначеЕсли СтрДлина(ИНН) = 12 Тогда
				КонтрагентОбъект.ВидКонтрагента=Перечисления.ВидыКонтрагента.ИндивидуальныйПредприниматель;
			КонецЕсли;

			ЮридическийАдрес = СтруктураПараметров.ЮридическийАдрес;
			
			Если ЗначениеЗаполнено(ЮридическийАдрес) Тогда
				
				Строки = КонтрагентОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКонтрагента));
				
				Если Строки.Количество() = 0 Тогда
					ДанныеСтроки = КонтрагентОбъект.КонтактнаяИнформация.Добавить();
				Иначе
					ДанныеСтроки = Строки[0];
				КонецЕсли;
				
				ДанныеСтроки.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				ДанныеСтроки.Вид = Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКонтрагента;
				ДанныеСтроки.Представление = ЮридическийАдрес.Представление;
				ДанныеСтроки.ЗначенияПолей = ЮридическийАдрес.КонтактнаяИнформация;
				ДанныеСтроки.Представление = ЮридическийАдрес.Представление;
								
			КонецЕсли;
			
			КонтрагентОбъект.ВнутренняяОрганизация = ЭтотОбъект.Ссылка;
			КонтрагентОбъект.Записать();
		
			КонтрагентОбъект.Записать();
			ВнутреннийКонтрагент = КонтрагентОбъект.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВнутреннийКонтрагент) Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	БанковскиеСчетаОрганизация.Ссылка КАК СчетОрганизации,
		|	ЕстьNULL(БанковскиеСчетаКонтрагент.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) КАК СчетКонтрагента
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчетаОрганизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагент
		|		ПО БанковскиеСчетаОрганизация.Банк = БанковскиеСчетаКонтрагент.Банк
		|			И БанковскиеСчетаОрганизация.НомерСчета = БанковскиеСчетаКонтрагент.НомерСчета
		|			И (БанковскиеСчетаКонтрагент.Владелец = &Контрагент)
		|ГДЕ
		|	БанковскиеСчетаОрганизация.Владелец = &Организация");
		
		Запрос.УстановитьПараметр("Организация", Ссылка);
		Запрос.УстановитьПараметр("Контрагент", ВнутреннийКонтрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.СчетКонтрагента) Тогда
				БанковскийСчетКонтрагентаОбъект = Справочники.БанковскиеСчета.СоздатьЭлемент();
			Иначе
				БанковскийСчетКонтрагентаОбъект = Выборка.СчетКонтрагента.ПолучитьОбъект();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(БанковскийСчетКонтрагентаОбъект, ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.СчетОрганизации, "Наименование, НомерСчета, Банк, Валютный, ВалютаДенежныхСредств, НомерИДатаРазрешения, ДатаОткрытия, ДатаЗакрытия, ВидСчета, Закрыт"));
			БанковскийСчетКонтрагентаОбъект.Владелец = ВнутреннийКонтрагент;
			БанковскийСчетКонтрагентаОбъект.ПарныйБанковскийСчет = Выборка.СчетОрганизации;
			БанковскийСчетКонтрагентаОбъект.Записать();
			
			СчетОрганизацииОбъект = Выборка.СчетОрганизации.ПолучитьОбъект();
			СчетОрганизацииОбъект.ПарныйБанковскийСчет = БанковскийСчетКонтрагентаОбъект.Ссылка;
			СчетОрганизацииОбъект.Записать();
			
		КонецЦикла;
		
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВнутреннийКонтрагент, "ВнутренняяОрганизация") <> Ссылка Тогда
			
			КонтрагентОбъект = ВнутреннийКонтрагент.ПолучитьОбъект();
			КонтрагентОбъект.ВнутренняяОрганизация = Ссылка;
			КонтрагентОбъект.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
